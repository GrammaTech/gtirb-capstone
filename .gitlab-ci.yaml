variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone
  EXTRA_INDEX_URL: https://__token__:$GL_PKG_API_TOKEN@${CI_API_V4_URL}/projects/1587/packages/pypi/simple

stages:
  - build-images
  - check-format
  - test
  - build
  - test_package
  - deploy

default:
  image: $DOCKER_REGISTRY/rewriting/gtirb-capstone
  tags: [cluster]
  before_script:
    - pip install --extra-index-url=$EXTRA_INDEX_URL .

check-format:
  stage: check-format
  script:
    - |+
      pre-commit run --all-files --show-diff-on-failure || ( (cat <<EOF
      ================================================================================
      If this stage fails, the formatting of your changes may be incorrect.
      To automatically format your files, install pre-commit:
          pip3 install pre-commit
          pre-commit install
      pre-commit will now automatically format any files before commit.
      To fix any misformatted files, run:
          pre-commit run --all-files
      And then commit any changes.
      More information regarding pre-commit can be found at https://pre-commit.com.

      NOTE FOR PROJECTS WITH C/C++ CODE:
      pre-commit will by default use the correct version of every formatting tool
      EXCEPT FOR clang-format. You need to ensure the version of clang-format you
      use is EXACTLY version 6.0.0. This is available in Ubuntu 18 by default.

      See also:
          https://git.grammatech.com/research/meta/-/wikis/infrastructure/infrastructure#running-ci-jobs-locally-for-debugging
          http://otsego.grammatech.com/u4/Videos/2020-09-11-Lunchtime-Seminar/
      ================================================================================
      EOF
      ) && exit 1)

test:
  stage: test
  script:
    - tox

build:
  stage: build
  artifacts:
    paths:
    - dist/gtirb_capstone-?.?.?-py3-none-any.whl
    expire_in: 1 weeks
  script:
    - python3 setup.py sdist bdist_wheel

test_package:
  needs: [build]
  variables:
    GIT_STRATEGY: none
  stage: test_package
  script:
    - for f in dist/*.whl; do python3 -m pip install $f; done

external-pypi:
  stage: deploy
  only:
    - master
  script:
    - python3 setup.py develop
    - VERSION=$(python3 -c "import gtirb_capstone; print(gtirb_capstone.__version__)")
    - RESPONSE_CODE=$(curl -Ls -o /dev/null -w "%{http_code}" https://pypi.org/project/gtirb-capstone/${VERSION}/)
    - if [ "$RESPONSE_CODE" = "404" ];
      then
        pip3 install twine --upgrade;
        python3 setup.py sdist bdist_wheel;
        twine check dist/*;
        twine upload dist/* -u __token__ -p $PYPI_API_KEY;
      fi

internal-pypi:
  stage: deploy
  only:
   - master
  script:
    - pip3 install twine wheel setuptools --upgrade
    - rm -rf build dist *.egg-info
    - python3 setup.py sdist bdist_wheel
    - twine check dist/*
    - echo 0 > exitcode.txt
    - (twine upload --verbose --repository-url $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/pypi --username gitlab-ci-token --password "$CI_JOB_TOKEN" dist/* | tee response.txt) || (echo $? > exitcode.txt; exit 0)
    # do not fail if we try to re-upload a package of the same version
    - if [[ "$(cat exitcode.txt)" != 0 && -z "$(cat response.txt | grep "File name has already been taken")" ]];
      then
        exit 1;
      fi
